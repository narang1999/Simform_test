// Generated by view binder compiler. Do not edit!
package com.example.simform_test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.simform_test.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialTextView body;

  @NonNull
  public final MaterialTextView bodyLabel;

  @NonNull
  public final AppCompatImageView categoryGroupIcon;

  @NonNull
  public final MaterialTextView comments;

  @NonNull
  public final MaterialTextView email;

  @NonNull
  public final MaterialTextView emailLabel;

  @NonNull
  public final AppCompatImageView imgIconListItem;

  @NonNull
  public final MaterialTextView name;

  @NonNull
  public final MaterialTextView nameLabel;

  private UserItemBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialTextView body,
      @NonNull MaterialTextView bodyLabel, @NonNull AppCompatImageView categoryGroupIcon,
      @NonNull MaterialTextView comments, @NonNull MaterialTextView email,
      @NonNull MaterialTextView emailLabel, @NonNull AppCompatImageView imgIconListItem,
      @NonNull MaterialTextView name, @NonNull MaterialTextView nameLabel) {
    this.rootView = rootView;
    this.body = body;
    this.bodyLabel = bodyLabel;
    this.categoryGroupIcon = categoryGroupIcon;
    this.comments = comments;
    this.email = email;
    this.emailLabel = emailLabel;
    this.imgIconListItem = imgIconListItem;
    this.name = name;
    this.nameLabel = nameLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.body;
      MaterialTextView body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.bodyLabel;
      MaterialTextView bodyLabel = ViewBindings.findChildViewById(rootView, id);
      if (bodyLabel == null) {
        break missingId;
      }

      id = R.id.categoryGroupIcon;
      AppCompatImageView categoryGroupIcon = ViewBindings.findChildViewById(rootView, id);
      if (categoryGroupIcon == null) {
        break missingId;
      }

      id = R.id.comments;
      MaterialTextView comments = ViewBindings.findChildViewById(rootView, id);
      if (comments == null) {
        break missingId;
      }

      id = R.id.email;
      MaterialTextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.emailLabel;
      MaterialTextView emailLabel = ViewBindings.findChildViewById(rootView, id);
      if (emailLabel == null) {
        break missingId;
      }

      id = R.id.imgIconListItem;
      AppCompatImageView imgIconListItem = ViewBindings.findChildViewById(rootView, id);
      if (imgIconListItem == null) {
        break missingId;
      }

      id = R.id.name;
      MaterialTextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nameLabel;
      MaterialTextView nameLabel = ViewBindings.findChildViewById(rootView, id);
      if (nameLabel == null) {
        break missingId;
      }

      return new UserItemBinding((ConstraintLayout) rootView, body, bodyLabel, categoryGroupIcon,
          comments, email, emailLabel, imgIconListItem, name, nameLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
