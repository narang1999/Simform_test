// Generated by view binder compiler. Do not edit!
package com.example.simform_test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.simform_test.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView image;

  @NonNull
  public final ConstraintLayout layoutMoviesDetails;

  @NonNull
  public final MaterialTextView name;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final MaterialTextView userData;

  private UserDetailBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatImageView image,
      @NonNull ConstraintLayout layoutMoviesDetails, @NonNull MaterialTextView name,
      @NonNull NestedScrollView nestedScrollView, @NonNull MaterialTextView userData) {
    this.rootView = rootView;
    this.image = image;
    this.layoutMoviesDetails = layoutMoviesDetails;
    this.name = name;
    this.nestedScrollView = nestedScrollView;
    this.userData = userData;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image;
      AppCompatImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      ConstraintLayout layoutMoviesDetails = (ConstraintLayout) rootView;

      id = R.id.name;
      MaterialTextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.userData;
      MaterialTextView userData = ViewBindings.findChildViewById(rootView, id);
      if (userData == null) {
        break missingId;
      }

      return new UserDetailBinding((ConstraintLayout) rootView, image, layoutMoviesDetails, name,
          nestedScrollView, userData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
